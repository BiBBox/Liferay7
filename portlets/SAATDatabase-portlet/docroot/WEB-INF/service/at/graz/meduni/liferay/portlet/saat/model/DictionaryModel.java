/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package at.graz.meduni.liferay.portlet.saat.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.AuditedModel;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Dictionary service. Represents a row in the &quot;saat_Dictionary&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link at.graz.meduni.liferay.portlet.saat.model.impl.DictionaryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link at.graz.meduni.liferay.portlet.saat.model.impl.DictionaryImpl}.
 * </p>
 *
 * @author reihsr
 * @see Dictionary
 * @see at.graz.meduni.liferay.portlet.saat.model.impl.DictionaryImpl
 * @see at.graz.meduni.liferay.portlet.saat.model.impl.DictionaryModelImpl
 * @generated
 */
@ProviderType
public interface DictionaryModel extends AuditedModel, BaseModel<Dictionary>,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dictionary model instance should use the {@link Dictionary} interface instead.
	 */

	/**
	 * Returns the primary key of this dictionary.
	 *
	 * @return the primary key of this dictionary
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dictionary.
	 *
	 * @param primaryKey the primary key of this dictionary
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the dictionary ID of this dictionary.
	 *
	 * @return the dictionary ID of this dictionary
	 */
	public long getDictionaryId();

	/**
	 * Sets the dictionary ID of this dictionary.
	 *
	 * @param dictionaryId the dictionary ID of this dictionary
	 */
	public void setDictionaryId(long dictionaryId);

	/**
	 * Returns the company ID of this dictionary.
	 *
	 * @return the company ID of this dictionary
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this dictionary.
	 *
	 * @param companyId the company ID of this dictionary
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this dictionary.
	 *
	 * @return the user ID of this dictionary
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this dictionary.
	 *
	 * @param userId the user ID of this dictionary
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this dictionary.
	 *
	 * @return the user uuid of this dictionary
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this dictionary.
	 *
	 * @param userUuid the user uuid of this dictionary
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this dictionary.
	 *
	 * @return the user name of this dictionary
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this dictionary.
	 *
	 * @param userName the user name of this dictionary
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this dictionary.
	 *
	 * @return the create date of this dictionary
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this dictionary.
	 *
	 * @param createDate the create date of this dictionary
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this dictionary.
	 *
	 * @return the modified date of this dictionary
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dictionary.
	 *
	 * @param modifiedDate the modified date of this dictionary
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the isroot of this dictionary.
	 *
	 * @return the isroot of this dictionary
	 */
	public boolean getIsroot();

	/**
	 * Returns <code>true</code> if this dictionary is isroot.
	 *
	 * @return <code>true</code> if this dictionary is isroot; <code>false</code> otherwise
	 */
	public boolean isIsroot();

	/**
	 * Sets whether this dictionary is isroot.
	 *
	 * @param isroot the isroot of this dictionary
	 */
	public void setIsroot(boolean isroot);

	/**
	 * Returns the iscode of this dictionary.
	 *
	 * @return the iscode of this dictionary
	 */
	public boolean getIscode();

	/**
	 * Returns <code>true</code> if this dictionary is iscode.
	 *
	 * @return <code>true</code> if this dictionary is iscode; <code>false</code> otherwise
	 */
	public boolean isIscode();

	/**
	 * Sets whether this dictionary is iscode.
	 *
	 * @param iscode the iscode of this dictionary
	 */
	public void setIscode(boolean iscode);

	/**
	 * Returns the synonym of this dictionary.
	 *
	 * @return the synonym of this dictionary
	 */
	@AutoEscape
	public String getSynonym();

	/**
	 * Sets the synonym of this dictionary.
	 *
	 * @param synonym the synonym of this dictionary
	 */
	public void setSynonym(String synonym);

	/**
	 * Returns the pattern of this dictionary.
	 *
	 * @return the pattern of this dictionary
	 */
	@AutoEscape
	public String getPattern();

	/**
	 * Sets the pattern of this dictionary.
	 *
	 * @param pattern the pattern of this dictionary
	 */
	public void setPattern(String pattern);

	/**
	 * Returns the befor synonym of this dictionary.
	 *
	 * @return the befor synonym of this dictionary
	 */
	public long getBeforSynonym();

	/**
	 * Sets the befor synonym of this dictionary.
	 *
	 * @param beforSynonym the befor synonym of this dictionary
	 */
	public void setBeforSynonym(long beforSynonym);

	/**
	 * Returns the after synonym of this dictionary.
	 *
	 * @return the after synonym of this dictionary
	 */
	public long getAfterSynonym();

	/**
	 * Sets the after synonym of this dictionary.
	 *
	 * @param afterSynonym the after synonym of this dictionary
	 */
	public void setAfterSynonym(long afterSynonym);

	/**
	 * Returns the foreword of this dictionary.
	 *
	 * @return the foreword of this dictionary
	 */
	public boolean getForeword();

	/**
	 * Returns <code>true</code> if this dictionary is foreword.
	 *
	 * @return <code>true</code> if this dictionary is foreword; <code>false</code> otherwise
	 */
	public boolean isForeword();

	/**
	 * Sets whether this dictionary is foreword.
	 *
	 * @param foreword the foreword of this dictionary
	 */
	public void setForeword(boolean foreword);

	/**
	 * Returns the ending of this dictionary.
	 *
	 * @return the ending of this dictionary
	 */
	public boolean getEnding();

	/**
	 * Returns <code>true</code> if this dictionary is ending.
	 *
	 * @return <code>true</code> if this dictionary is ending; <code>false</code> otherwise
	 */
	public boolean isEnding();

	/**
	 * Sets whether this dictionary is ending.
	 *
	 * @param ending the ending of this dictionary
	 */
	public void setEnding(boolean ending);

	/**
	 * Returns the sentence of this dictionary.
	 *
	 * @return the sentence of this dictionary
	 */
	public boolean getSentence();

	/**
	 * Returns <code>true</code> if this dictionary is sentence.
	 *
	 * @return <code>true</code> if this dictionary is sentence; <code>false</code> otherwise
	 */
	public boolean isSentence();

	/**
	 * Sets whether this dictionary is sentence.
	 *
	 * @param sentence the sentence of this dictionary
	 */
	public void setSentence(boolean sentence);

	/**
	 * Returns the occure of this dictionary.
	 *
	 * @return the occure of this dictionary
	 */
	public boolean getOccure();

	/**
	 * Returns <code>true</code> if this dictionary is occure.
	 *
	 * @return <code>true</code> if this dictionary is occure; <code>false</code> otherwise
	 */
	public boolean isOccure();

	/**
	 * Sets whether this dictionary is occure.
	 *
	 * @param occure the occure of this dictionary
	 */
	public void setOccure(boolean occure);

	/**
	 * Returns the nagation of this dictionary.
	 *
	 * @return the nagation of this dictionary
	 */
	public boolean getNagation();

	/**
	 * Returns <code>true</code> if this dictionary is nagation.
	 *
	 * @return <code>true</code> if this dictionary is nagation; <code>false</code> otherwise
	 */
	public boolean isNagation();

	/**
	 * Sets whether this dictionary is nagation.
	 *
	 * @param nagation the nagation of this dictionary
	 */
	public void setNagation(boolean nagation);

	/**
	 * Returns the priority_mode of this dictionary.
	 *
	 * @return the priority_mode of this dictionary
	 */
	public boolean getPriority_mode();

	/**
	 * Returns <code>true</code> if this dictionary is priority_mode.
	 *
	 * @return <code>true</code> if this dictionary is priority_mode; <code>false</code> otherwise
	 */
	public boolean isPriority_mode();

	/**
	 * Sets whether this dictionary is priority_mode.
	 *
	 * @param priority_mode the priority_mode of this dictionary
	 */
	public void setPriority_mode(boolean priority_mode);

	/**
	 * Returns the code type of this dictionary.
	 *
	 * @return the code type of this dictionary
	 */
	@AutoEscape
	public String getCodeType();

	/**
	 * Sets the code type of this dictionary.
	 *
	 * @param codeType the code type of this dictionary
	 */
	public void setCodeType(String codeType);

	/**
	 * Returns the code value of this dictionary.
	 *
	 * @return the code value of this dictionary
	 */
	@AutoEscape
	public String getCodeValue();

	/**
	 * Sets the code value of this dictionary.
	 *
	 * @param codeValue the code value of this dictionary
	 */
	public void setCodeValue(String codeValue);

	/**
	 * Returns the priority of this dictionary.
	 *
	 * @return the priority of this dictionary
	 */
	public long getPriority();

	/**
	 * Sets the priority of this dictionary.
	 *
	 * @param priority the priority of this dictionary
	 */
	public void setPriority(long priority);

	/**
	 * Returns the disease_ids of this dictionary.
	 *
	 * @return the disease_ids of this dictionary
	 */
	@AutoEscape
	public String getDisease_ids();

	/**
	 * Sets the disease_ids of this dictionary.
	 *
	 * @param disease_ids the disease_ids of this dictionary
	 */
	public void setDisease_ids(String disease_ids);

	/**
	 * Returns the dirty of this dictionary.
	 *
	 * @return the dirty of this dictionary
	 */
	public boolean getDirty();

	/**
	 * Returns <code>true</code> if this dictionary is dirty.
	 *
	 * @return <code>true</code> if this dictionary is dirty; <code>false</code> otherwise
	 */
	public boolean isDirty();

	/**
	 * Sets whether this dictionary is dirty.
	 *
	 * @param dirty the dirty of this dictionary
	 */
	public void setDirty(boolean dirty);

	/**
	 * Returns the disease_ids_count of this dictionary.
	 *
	 * @return the disease_ids_count of this dictionary
	 */
	public long getDisease_ids_count();

	/**
	 * Sets the disease_ids_count of this dictionary.
	 *
	 * @param disease_ids_count the disease_ids_count of this dictionary
	 */
	public void setDisease_ids_count(long disease_ids_count);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		at.graz.meduni.liferay.portlet.saat.model.Dictionary dictionary);

	@Override
	public int hashCode();

	@Override
	public CacheModel<at.graz.meduni.liferay.portlet.saat.model.Dictionary> toCacheModel();

	@Override
	public at.graz.meduni.liferay.portlet.saat.model.Dictionary toEscapedModel();

	@Override
	public at.graz.meduni.liferay.portlet.saat.model.Dictionary toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}